{"ast":null,"code":"import _asyncToGenerator from \"/home/fernando/Documents/tarea/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { categoriaActiva } from '../../categoria/services/categoria.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nexport class ProductoService {\n  constructor(route, http) {\n    this.route = route;\n    this.http = http;\n    this.lista = [];\n    this.lista1 = [];\n    this.lista2 = [];\n    this.productoslocal = [];\n    this.productocategoria = [];\n    this.detallesreserva = [];\n    this.usuarioactivo = localStorage.getItem(\"usuarioactivo\");\n    this.localactivo = localStorage.getItem(\"usuariolocal\");\n    this.adminactivo = localStorage.getItem(\"adminactivo\");\n    this.categoria = categoriaActiva;\n    this.http.get('http://127.0.0.1:8080/api/productolocal').toPromise().then(resp => {\n      this.productoslocal = resp;\n    });\n  }\n\n  agregar(productolocal) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const promesa = _this.http.put('http://127.0.0.1:8080/api/detallereservacarrito' + '/' + localStorage.getItem(\"carrito\") + '/' + productolocal.codProductoLocal.toString(), \"\").toPromise();\n\n      return promesa.then(value => {\n        return true;\n      });\n    })();\n  }\n\n  login() {\n    this.route.navigate(['login']);\n  }\n\n  ircategorias() {\n    this.route.navigate(['categorias']);\n  }\n\n  filtrar() {\n    if (localStorage.getItem(\"categoriaactiva\") == \"\") {\n      return this.productoslocal;\n    } else {\n      this.http.get('http://127.0.0.1:8080/api/productolocalcategoria/' + localStorage.getItem(\"categoriaactiva\")).toPromise().then(resp => {\n        this.productoslocal = resp;\n      });\n      return this.productoslocal;\n    } //lista de productos locales filtaradas por categoriaasasasasasas\n\n  }\n\n}\n\nProductoService.ɵfac = function ProductoService_Factory(t) {\n  return new (t || ProductoService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient));\n};\n\nProductoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductoService,\n  factory: ProductoService.ɵfac,\n  providedIn: 'root'\n});\nconst productocategoria = [];","map":{"version":3,"sources":["/home/fernando/Documents/tarea/src/app/productos/services/producto.service.ts"],"names":[],"mappings":";AAIA,SAAS,eAAT,QAAgC,4CAAhC;;;;AAOA,OAAM,MAAO,eAAP,CAAsB;AAC5B,EAAA,WAAA,CAAoB,KAApB,EAA0C,IAA1C,EAAyD;AAArC,SAAA,KAAA,GAAA,KAAA;AAAsB,SAAA,IAAA,GAAA,IAAA;AAInC,SAAA,KAAA,GAAiB,EAAjB;AACA,SAAA,MAAA,GAAuB,EAAvB;AACA,SAAA,MAAA,GAAmB,EAAnB;AAEP,SAAA,cAAA,GAA+B,EAA/B;AACA,SAAA,iBAAA,GAA6B,EAA7B;AACA,SAAA,eAAA,GAAiC,EAAjC;AAMA,SAAA,aAAA,GAAc,YAAY,CAAC,OAAb,CAAqB,eAArB,CAAd;AACA,SAAA,WAAA,GAAY,YAAY,CAAC,OAAb,CAAqB,cAArB,CAAZ;AACA,SAAA,WAAA,GAAY,YAAY,CAAC,OAAb,CAAqB,aAArB,CAAZ;AACA,SAAA,SAAA,GAAU,eAAV;AAlBI,SAAK,IAAL,CAAU,GAAV,CAA+B,yCAA/B,EAA0E,SAA1E,GAAsF,IAAtF,CAA4F,IAAD,IAAwB;AAAC,WAAK,cAAL,GAAoB,IAApB;AAA0B,KAA9I;AACF;;AASI,EAAA,OAAO,CAAC,aAAD,EAA4B;AAAA;;AAAA;AACrC,YAAM,OAAO,GAAE,KAAI,CAAC,IAAL,CAAU,GAAV,CAAmB,oDAAoD,GAApD,GAAyD,YAAY,CAAC,OAAb,CAAqB,SAArB,CAAzD,GAAyF,GAAzF,GAA6F,aAAa,CAAC,gBAAd,CAA+B,QAA/B,EAAhH,EAA0J,EAA1J,EAA8J,SAA9J,EAAf;;AACI,aAAO,OAAO,CAAC,IAAR,CAAa,KAAK,IAAE;AAAC,eAAO,IAAP;AAAY,OAAjC,CAAP;AAFiC;AAGxC;;AAMD,EAAA,KAAK,GAAA;AACD,SAAK,KAAL,CAAW,QAAX,CAAoB,CAAC,OAAD,CAApB;AACH;;AACD,EAAA,YAAY,GAAA;AACR,SAAK,KAAL,CAAW,QAAX,CAAoB,CAAC,YAAD,CAApB;AACH;;AAID,EAAA,OAAO,GAAA;AACH,QAAG,YAAY,CAAC,OAAb,CAAqB,iBAArB,KAAyC,EAA5C,EAA+C;AAE3C,aAAO,KAAK,cAAZ;AACH,KAHD,MAII;AACA,WAAK,IAAL,CAAU,GAAV,CAA+B,sDAAoD,YAAY,CAAC,OAAb,CAAqB,iBAArB,CAAnF,EAA4H,SAA5H,GAAwI,IAAxI,CAA8I,IAAD,IAAwB;AAAC,aAAK,cAAL,GAAoB,IAApB;AAA0B,OAAhM;AACA,aAAO,KAAK,cAAZ;AACH,KARE,CASH;;AACH;;AAxC2B;;;mBAAf,e,EAAe,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,MAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAf,e;AAAe,EAAA,OAAA,EAAf,eAAe,CAAA,I;AAAA,EAAA,UAAA,EAFb;;AA+Cf,MAAM,iBAAiB,GAAa,EAApC","sourcesContent":["import { Injectable } from \"@angular/core\";\r\nimport { Categoria } from \"src/app/modelo/categoria.class\";\r\nimport { DetalleReserva } from \"src/app/modelo/detallereserva.class\";\r\nimport { ProductoLocal} from \"src/app/modelo/productolocal.class\";\r\nimport { categoriaActiva } from '../../categoria/services/categoria.service';\r\nimport { Producto} from '../../modelo/producto.class';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n@Injectable({\r\n    providedIn:'root'\r\n})\r\nexport class ProductoService{\r\nconstructor(private route:Router, private http:HttpClient) {\r\n    this.http.get<ProductoLocal[]>('http://127.0.0.1:8080/api/productolocal').toPromise().then((resp:ProductoLocal[])=>{this.productoslocal=resp;});\r\n }\r\n\r\npublic lista:Producto[]=[]\r\npublic lista1:ProductoLocal[]=[]\r\npublic lista2:Categoria[]=[]\r\n\r\nproductoslocal:ProductoLocal[]=[];\r\nproductocategoria:Producto[]=[]\r\ndetallesreserva:DetalleReserva[]=[]\r\nasync agregar(productolocal:ProductoLocal){\r\n    const promesa =this.http.put<any>('http://127.0.0.1:8080/api/detallereservacarrito' + '/'+ localStorage.getItem(\"carrito\")+'/'+productolocal.codProductoLocal.toString(),\"\").toPromise();\r\n        return promesa.then(value=>{return true})\r\n}\r\n\r\nusuarioactivo=localStorage.getItem(\"usuarioactivo\")\r\nlocalactivo=localStorage.getItem(\"usuariolocal\")\r\nadminactivo=localStorage.getItem(\"adminactivo\")\r\ncategoria=categoriaActiva\r\nlogin(){\r\n    this.route.navigate(['login'])\r\n}\r\nircategorias(){\r\n    this.route.navigate(['categorias'])\r\n}\r\n\r\n\r\n\r\nfiltrar(){\r\n    if(localStorage.getItem(\"categoriaactiva\")==\"\"){\r\n        \r\n        return this.productoslocal\r\n    }\r\n    else{\r\n        this.http.get<ProductoLocal[]>('http://127.0.0.1:8080/api/productolocalcategoria/'+localStorage.getItem(\"categoriaactiva\")).toPromise().then((resp:ProductoLocal[])=>{this.productoslocal=resp;});      \r\n        return this.productoslocal\r\n    }\r\n    //lista de productos locales filtaradas por categoriaasasasasasas\r\n}\r\n\r\n\r\n}\r\n\r\nconst productocategoria:Categoria[]=[]\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}